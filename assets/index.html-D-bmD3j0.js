import{_ as c,c as p,e as r,a as t,d as a,b as d,w as s,r as n,o as i}from"./app-D7KDYWdB.js";const l={},h={id:"includesubdomains-可选",tabindex:"-1"},T={class:"header-anchor",href:"#includesubdomains-可选"},m={id:"preload-可选",tabindex:"-1"},S={class:"header-anchor",href:"#preload-可选"};function g(u,e){const o=n("Badge");return i(),p("div",null,[e[6]||(e[6]=r(`<p><code>HTTP-Strict-Transport-Security</code> 简称为 <code>HSTS</code>，是一个 HTTP 响应头。 用于通知浏览器应该只通过 HTTPS 访问该站点，并且以后使用 HTTP 访问该站点的所有尝试都应自动转换为 HTTPS。</p><h2 id="中间人劫持" tabindex="-1"><a class="header-anchor" href="#中间人劫持"><span>中间人劫持</span></a></h2><p>当用户在未知风险的网络环境中访问 某个网站的时候，如访问 <code>http://example.com</code>，在这个未知风险的网络环境中， 可能会被其他人拦截到用户发出的网络请求，然后跳转到一个一模一样的钓鱼网站，或者在请求内容中，注入有危害的代码、广告等， 这种攻击行为，被称为 <strong>中间人劫持</strong>。</p><p>当 <code>example.com</code> 也支持 <code>https</code> 协议进行访问后，如果用户直接通过 <code>https</code> 协议访问，那么在一定程度上可以有效防止 <code>中间人劫持</code>。</p><p>如果用户依然通过 <code>http</code> 协议访问，虽然服务器可以重定向到 <code>https</code> 请求，然而在这个过程中，中间人依然可以 通过拦截 <code>http</code> 请求，然后向服务器发起 <code>https</code> 请求获取内容，再注入新的内容 返回给用户。</p><p>用户在浏览器地址栏中 输入 <code>example.com</code>, 浏览器默认发起的是 <code>http</code> 请求，这导致了我们很难要求用户在通过域名访问 网站时，一定要输入 <code>https://example.com</code>。</p><p>为了限制 <code>中间人劫持</code> 这种潜在的攻击手段，一种处理方式就是 强制浏览器使用 <code>https</code> 协议访问网站。 为此，我们需要给网站开启 <code>HSTS</code>。</p><h2 id="hsts" tabindex="-1"><a class="header-anchor" href="#hsts"><span>HSTS</span></a></h2><p><code>HSTS</code> 通过声明 <code>HTTP</code> 头部字段 <code>HTTP-Strict-Transport-Security</code> 来启用和配置策略：</p><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Strict-Transport-Security: max-age=&lt;expire-time&gt;</span></span>
<span class="line"><span>Strict-Transport-Security: max-age=&lt;expire-time&gt;; includeSubDomains</span></span>
<span class="line"><span>Strict-Transport-Security: max-age=&lt;expire-time&gt;; preload</span></span></code></pre></div><h3 id="指令" tabindex="-1"><a class="header-anchor" href="#指令"><span>指令</span></a></h3><h4 id="max-age-expire-time" tabindex="-1"><a class="header-anchor" href="#max-age-expire-time"><span><code>max-age=&lt;expire-time&gt;</code></span></a></h4><p>设置在浏览器收到这个请求后的<code>&lt;expire-time&gt;</code>秒的时间内凡是访问这个域名下的请求都使用 HTTPS 请求。</p>`,13)),t("h4",h,[t("a",T,[t("span",null,[e[1]||(e[1]=t("code",null,"includeSubDomains",-1)),e[2]||(e[2]=a()),d(o,null,{default:s(()=>[...e[0]||(e[0]=[a("可选",-1)])]),_:1})])])]),e[7]||(e[7]=t("p",null,"如果这个可选的参数被指定，那么说明此规则也适用于该网站的所有子域名。",-1)),t("h4",m,[t("a",S,[t("span",null,[e[4]||(e[4]=t("code",null,"preload",-1)),e[5]||(e[5]=a()),d(o,null,{default:s(()=>[...e[3]||(e[3]=[a("可选",-1)])]),_:1})])])]),e[8]||(e[8]=r('<p>查看 <a href="https://www.chromium.org/hsts/" target="_blank" rel="noopener noreferrer">预加载 HSTS</a> 获得详情。不是标准的一部分。</p><h3 id="浏览器处理" tabindex="-1"><a class="header-anchor" href="#浏览器处理"><span>浏览器处理</span></a></h3><blockquote><p>当网站已开启 <code>HSTS</code></p></blockquote><p>用户在第一次通过 <code>https</code> 协议访问网站时，服务器响应<code>Strict-Transport-Security</code> 头，浏览器记录下信息， 在以后重新访问访问网站时，会把访问这个网站的 <code>http</code> 请求自动替换为 <code>https</code>。</p><p>当 <code>HSTS</code> 头设置的过期时间到了，后面通过 <code>HTTP</code> 的访问恢复到正常模式，不会再自动跳转到 <code>HTTPS。</code></p><p>每次浏览器接收到 <code>Strict-Transport-Security</code> 头，它都会更新这个网站的过期时间，所以网站可以刷新这些信息，防止过期发生。</p><p>Chrome、Firefox 等浏览器里，当尝试访问该域名下的内容时，会产生一个 307 Internal Redirect（内部跳转），自动跳转到 HTTPS 请求。</p><h2 id="预加载" tabindex="-1"><a class="header-anchor" href="#预加载"><span>预加载</span></a></h2><p>如果用户首次访问网站时，依然使用的是 <code>http</code> 协议，浏览器会忽略<code>Strict-Transport-Security</code>，而且中间人依然可以劫持请求内容，删除 <code>Strict-Transport-Security</code>。</p><p>为了进一步处理这个问题， <code>Google</code>、<code>Firefox</code> 等浏览器厂商，维护了一个 <code>HSTS</code> 预加载服务。</p><p>你可以将你已开启了 <code>HSTS</code> 的 站点域名，提交到 预加载服务中，浏览器将会永不使用非安全的方式连接到你的域名。</p><p>但是，这不是 HSTS 标准的一部分，也不该被当作正式的内容。</p><p><a href="https://hstspreload.org/" target="_blank" rel="noopener noreferrer"><code>HSTS</code>预加载服务</a></p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>当前域名，以及所有子域名，开启 <code>HSTS</code>, 过期时间为 一年。</p><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Strict-Transport-Security: max-age=31536000; includeSubDomains</span></span></code></pre></div>',16))])}const x=c(l,[["render",g]]),f=JSON.parse('{"path":"/article/1w4onzn1/","title":"为你的站点开启HSTS","lang":"zh-CN","frontmatter":{"title":"为你的站点开启HSTS","createTime":"2020/11/12 07:08:12","tags":["http","安全"],"permalink":"/article/1w4onzn1/","description":"HTTP-Strict-Transport-Security 简称为 HSTS，是一个 HTTP 响应头。 用于通知浏览器应该只通过 HTTPS 访问该站点，并且以后使用 HTTP 访问该站点的所有尝试都应自动转换为 HTTPS。 中间人劫持 当用户在未知风险的网络环境中访问 某个网站的时候，如访问 http://example.com，在这个未知风险...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为你的站点开启HSTS\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/article/1w4onzn1/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"为你的站点开启HSTS"}],["meta",{"property":"og:description","content":"HTTP-Strict-Transport-Security 简称为 HSTS，是一个 HTTP 响应头。 用于通知浏览器应该只通过 HTTPS 访问该站点，并且以后使用 HTTP 访问该站点的所有尝试都应自动转换为 HTTPS。 中间人劫持 当用户在未知风险的网络环境中访问 某个网站的时候，如访问 http://example.com，在这个未知风险..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:tag","content":"安全"}],["meta",{"property":"article:tag","content":"http"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":3.19,"words":957},"git":{"createdTime":1670808719000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"volodymyr@foxmail.com","commits":7,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"blog/1.前端/8.HTTP/HSTS.md","headers":[],"categoryList":[{"id":"72e6d5","sort":1,"name":"前端"},{"id":"2a0632","sort":8,"name":"HTTP"}]}');export{x as comp,f as data};
