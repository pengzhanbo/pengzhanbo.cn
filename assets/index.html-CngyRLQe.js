import{_ as e,c as i,e as s,o as t}from"./app-D7KDYWdB.js";const n={};function p(r,a){return t(),i("div",null,[...a[0]||(a[0]=[s(`<div class="hint-container tip"><p class="hint-container-title">提问</p><ol><li>typeof NaN的结果是什么？</li><li>isNaN() 和 Number.isNaN() 有什么区别？</li></ol></div><h2 id="typeof-nan" tabindex="-1"><a class="header-anchor" href="#typeof-nan"><span>typeof NaN</span></a></h2><p><code>NaN</code> 表示不是一个数字 （not a number），NaN 是一个警戒值，用于指出数字类型中的错误情况， 即 执行数字预算没有成功，这是失败后返回的结果。</p><div class="language-js" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">typeof</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">NaN</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // &quot;number&quot;</span></span></code></pre></div><p>NaN 作为一个特殊值， 它和自身是不相等的，是唯一个非自反的值，即</p><div class="language-js" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// eslint-disable-next-line no-self-compare, use-isnan</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">NaN</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ===</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">NaN</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // false</span></span></code></pre></div><h2 id="isnan-和-number-isnan" tabindex="-1"><a class="header-anchor" href="#isnan-和-number-isnan"><span>isNaN() 和 Number.isNaN()</span></a></h2><p><code>isNaN()</code> 接受参数后，会尝试将这个参数转换为数值，任何不能被转换为数值的值都会返回true，因此非数字值传入也会 返回 true，影响 NaN 的判断。</p><p><code>Number.isNaN()</code> 会首先判断传入的参数是否为数字，如果是数字再继续判断是否为 NaN, 这种方法对NaN的判断更为准确。</p>`,9)])])}const o=e(n,[["render",p]]),l=JSON.parse('{"path":"/interview-question/jilzuxpt/","title":"NaN","lang":"zh-CN","frontmatter":{"title":"NaN","createTime":"2022/04/15 03:35:01","permalink":"/interview-question/jilzuxpt/","description":"提问 typeof NaN的结果是什么？ isNaN() 和 Number.isNaN() 有什么区别？ typeof NaN NaN 表示不是一个数字 （not a number），NaN 是一个警戒值，用于指出数字类型中的错误情况， 即 执行数字预算没有成功，这是失败后返回的结果。 NaN 作为一个特殊值， 它和自身是不相等的，是唯一个非自反的值，...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NaN\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/interview-question/jilzuxpt/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"NaN"}],["meta",{"property":"og:description","content":"提问 typeof NaN的结果是什么？ isNaN() 和 Number.isNaN() 有什么区别？ typeof NaN NaN 表示不是一个数字 （not a number），NaN 是一个警戒值，用于指出数字类型中的错误情况， 即 执行数字预算没有成功，这是失败后返回的结果。 NaN 作为一个特殊值， 它和自身是不相等的，是唯一个非自反的值，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":0.78,"words":235},"git":{"createdTime":1650030769000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"volodymyr@foxmail.com","commits":13,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"面试题/JavaScript/NaN.md","headers":[]}');export{o as comp,l as data};
