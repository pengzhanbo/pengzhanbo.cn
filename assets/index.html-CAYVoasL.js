import{_ as i,c as s,e as a,o as t}from"./app-D7KDYWdB.js";const p="/images/viewport.png",n={};function l(h,e){return t(),s("div",null,[...e[0]||(e[0]=[a(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>移动端设备由于不同品牌、不同机型，不同设备中，使用的不同浏览器，带来的一系列适配问题。在这些设备中，如何实现展示效果、交互的一致性，是比较头疼的问题。</p><h2 id="发展" tabindex="-1"><a class="header-anchor" href="#发展"><span>发展</span></a></h2><p>早期的适配方案五花八门。</p><p>在2015年双十一左右， 阿里前端团队 AmFe 分享了 <code>flexiable</code> 的移动端适配方案，在往后的几年中， <code>flexiable</code>成为了主流的移动端适配方案在各大移动端应用中使用。</p><p>随着技术的发展，CSS3的<code>viewport</code>越来越得到了更多的设备支持， 逐渐的可以直接使用 viewport 来作为 移动端适配方案，2017年左右开始步入开发者的视野。</p><p>后来 AmFe 宣布 推荐使用 <code>viewport</code> 方案代替 <code>flexible</code>，<code>viewport</code>方案逐渐成为主流适配方案。</p><h2 id="lib-flexible-方案介绍" tabindex="-1"><a class="header-anchor" href="#lib-flexible-方案介绍"><span>lib-flexible 方案介绍</span></a></h2><h3 id="viewport" tabindex="-1"><a class="header-anchor" href="#viewport"><span>viewport</span></a></h3><p>viewport 即浏览器窗口，在移动端设备中，viewport太窄，为了更好的服务于CSS，提供了 <code>visual viewport</code> 和 <code>layout viewport</code></p><h3 id="物理像素-physical-pixel" tabindex="-1"><a class="header-anchor" href="#物理像素-physical-pixel"><span>物理像素（physical pixel）</span></a></h3><p>物理像素即设备像素，是显示设备中最微小的物理部件。</p><h3 id="设备独立像素-density-independent-pixel" tabindex="-1"><a class="header-anchor" href="#设备独立像素-density-independent-pixel"><span>设备独立像素（density-independent pixel）</span></a></h3><p>设备独立像素也称为 密度无关像素，可以认为是计算机坐标系统中的一个点，这个点代表一个可以由程序使用的虚拟像素，然后由系统转换为物理像素</p><h3 id="css像素-css-pixel" tabindex="-1"><a class="header-anchor" href="#css像素-css-pixel"><span>CSS像素（CSS pixel）</span></a></h3><p>css像素是一个抽象单位，主要用在浏览器上，用来精确的度量Web页面上的内容。</p><p>一般情况下， CSS像素称为设备无关的像素，简称 <code>DIPs</code></p><h3 id="屏幕密度" tabindex="-1"><a class="header-anchor" href="#屏幕密度"><span>屏幕密度</span></a></h3><p>屏幕密度是指一个设备表面上存在的像素密度，它通常已每英寸有多少像素来计算（<code>PPI</code>）</p><h3 id="设备像素比-device-pixel-ratio" tabindex="-1"><a class="header-anchor" href="#设备像素比-device-pixel-ratio"><span>设备像素比（device pixel ratio）</span></a></h3><p>简称 <code>DPR</code>，定义了物理像素和设备独立像素的对应关系</p><div class="language-html" data-highlighter="shiki" data-ext="html" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-html"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">设备像素比 = 物理像素 / 设备独立像素</span></span></code></pre></div><h3 id="简要说明" tabindex="-1"><a class="header-anchor" href="#简要说明"><span>简要说明</span></a></h3><p><code>flexiable</code> 通过hack手段，根据设备的dpr值相应改变 <code>&lt;meta&gt;</code> 标签中viewport的值：</p><div class="language-html" data-highlighter="shiki" data-ext="html" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-html"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&lt;!-- dpr = 1--&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">meta</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">viewport</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> content</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">initial-scale=scale,maximum-scale=scale,minimum-scale=scale,user-scalable=no</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&lt;!-- dpr = 2--&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">meta</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">viewport</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> content</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">initial-scale=0.5,maximum-scale=0.5,minimum-scale=0.5,user-scalable=no</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&lt;!-- dpr = 3--&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">meta</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">viewport</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  content</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">initial-scale=0.3333333333,maximum-scale=0.3333333333,minimum-scale=0.3333333333,user-scalable=no</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">/&gt;</span></span></code></pre></div><p>从而让页面达到缩放的效果，变相的实现页面的适配功能。</p><p>主要的思想：</p><ol><li>根据 <code>dpr</code>的值来修改 <code>viewport</code> 实现1px的线</li><li>根据 <code>dpr</code>的值来修改 <code>html</code>的 <code>font-size</code>，从而使用rem实现等比缩放</li><li>使用 <code>hack</code> 手段用<code>rem</code>模拟 <code>vw</code>的特性</li></ol><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><blockquote><p>github: <a href="https://github.com/amfe/lib-flexible" target="_blank" rel="noopener noreferrer">https://github.com/amfe/lib-flexible</a></p></blockquote><blockquote><p>px-to-rem: <a href="https://www.npmjs.com/package/postcss-pxtorem" target="_blank" rel="noopener noreferrer">https://www.npmjs.com/package/postcss-pxtorem</a></p></blockquote><h2 id="px-to-viewport-适配方案" tabindex="-1"><a class="header-anchor" href="#px-to-viewport-适配方案"><span>px-to-viewport 适配方案</span></a></h2><p><code>Flexiable</code> 是通过javascript 模拟 <code>vw</code>的特性，到今天未知，<code>vw</code>已经得到了众多浏览器的支持，完全可以考虑直接将<code>vw</code>单位用于我们的适配布局中。</p><p>在css level3 中，定义了和 viewport相关的四个单位，分别是 <code>vw</code>、<code>vh</code>、<code>vmin</code>、<code>vmax</code>。</p><ul><li><code>vw</code>: viewport width 简写，1vw等于 <code>window.innerWidth</code> 的 <code>1%</code></li><li><code>vh</code>： viewport height简写，1vh 等于 <code>window.innerHeight</code> 的 <code>1%</code></li><li><code>vmin</code>：vmin的值是当前 vw和vh中较小值</li><li><code>vmax</code>： vmax的值是当前 vw和vh中较大值</li></ul><p><img src="`+p+'" alt="viewport"></p><p>在一张 750px的设计稿中， 100vw=750px， 1vw=7.5px，通过公式即可转换px单位为vw单位，实现适配。</p><p>可以通过 postcss-px-to-viewport 来帮助实现自动转换</p><blockquote><p>github: <a href="https://github.com/evrone/postcss-px-to-viewport/blob/master/README_CN.md" target="_blank" rel="noopener noreferrer">https://github.com/evrone/postcss-px-to-viewport</a></p></blockquote><h3 id="适用vw适配页面的场景" tabindex="-1"><a class="header-anchor" href="#适用vw适配页面的场景"><span>适用vw适配页面的场景</span></a></h3><ol><li>容器适配</li><li>文本适配</li><li>大于1px的边框、圆角、阴影</li><li>内边距和外边距</li></ol>',41)])])}const r=i(n,[["render",l]]),d=JSON.parse('{"path":"/article/vhpmovsm/","title":"移动端适配方案","lang":"zh-CN","frontmatter":{"title":"移动端适配方案","createTime":"2020/08/14 01:54:29","permalink":"/article/vhpmovsm/","tags":["development"],"description":"背景 移动端设备由于不同品牌、不同机型，不同设备中，使用的不同浏览器，带来的一系列适配问题。在这些设备中，如何实现展示效果、交互的一致性，是比较头疼的问题。 发展 早期的适配方案五花八门。 在2015年双十一左右， 阿里前端团队 AmFe 分享了 flexiable 的移动端适配方案，在往后的几年中， flexiable成为了主流的移动端适配方案在各大...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"移动端适配方案\\",\\"image\\":[\\"https://pengzhanbo.cn/images/viewport.png\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/article/vhpmovsm/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"移动端适配方案"}],["meta",{"property":"og:description","content":"背景 移动端设备由于不同品牌、不同机型，不同设备中，使用的不同浏览器，带来的一系列适配问题。在这些设备中，如何实现展示效果、交互的一致性，是比较头疼的问题。 发展 早期的适配方案五花八门。 在2015年双十一左右， 阿里前端团队 AmFe 分享了 flexiable 的移动端适配方案，在往后的几年中， flexiable成为了主流的移动端适配方案在各大..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pengzhanbo.cn/images/viewport.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:tag","content":"development"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":3.16,"words":947},"git":{"createdTime":1647196729000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"q942450674@outlook.com","commits":18,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"blog/1.前端/10.开发/移动端适配方案.md","headers":[],"categoryList":[{"id":"72e6d5","sort":1,"name":"前端"},{"id":"90af2f","sort":10,"name":"开发"}]}');export{r as comp,d as data};
