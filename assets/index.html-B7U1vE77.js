import{_ as t,c as a,e as i,o as n}from"./app-D7KDYWdB.js";const o={};function r(p,e){return n(),a("div",null,[...e[0]||(e[0]=[i('<div class="hint-container tip"><p class="hint-container-title">提问</p><ol><li>什么是事件？</li><li>标准事件模型</li><li>什么是事件委托？</li></ol></div><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件"><span>事件</span></a></h2><p>事件是 在浏览器窗口中被触发并且通常被绑定在窗口内部的特定部分。 可能是一个元素、一系列元素、被加载到这个窗口的HTML代码，或者整个浏览器窗口。</p><p>比如：</p><ul><li>用户对页面进行的操作，如 点击鼠标或悬停光标、按下键盘某个按键、调整浏览器的大小</li><li>网页停止加载</li><li>提交表达</li><li>发生错误</li></ul><h2 id="标准事件模型" tabindex="-1"><a class="header-anchor" href="#标准事件模型"><span>标准事件模型</span></a></h2><p>DOM标准事件模型指的是 DOM2事件模型。</p><p>在标准事件模型中，一次事件的发生有三个阶段：</p><ol><li>事件捕获阶段。事件从window对象自上而下向目标节点传播的阶段；</li><li>目标阶段。 真正的目标节点正在处理事件的阶段；</li><li>冒泡阶段：事件从目标节点自下而上向window对象传播的阶段。</li></ol><h2 id="事件委托" tabindex="-1"><a class="header-anchor" href="#事件委托"><span>事件委托</span></a></h2><p>事件委托本质上是利用浏览器事件冒泡的机制。因为事件在冒泡过程中会上传到父节点， 并且父节点可以通过事件对象获取到目标节点，因此可以吧子节点的监听函数定义在父节点上， 由父节点的监听函数统一处理多个子元素的事件，这种方式称为 事件代理 或者 事件委托。</p><p>使用事件委托，就可以不必要为每一个子元素都绑定一个监听事件，这样减少了内存上的消耗。 并且使用事件委托，可以实现事件的动态绑定，比如新增了一个子节点，就不需要单独地为它添加一个监听事件， 节点发生的事件会交给父元素中的监听函数来处理。</p>',12)])])}const c=t(o,[["render",r]]),s=JSON.parse('{"path":"/interview-question/bww4boap/","title":"事件","lang":"zh-CN","frontmatter":{"title":"事件","createTime":"2022/04/15 04:49:24","permalink":"/interview-question/bww4boap/","description":"提问 什么是事件？ 标准事件模型 什么是事件委托？ 事件 事件是 在浏览器窗口中被触发并且通常被绑定在窗口内部的特定部分。 可能是一个元素、一系列元素、被加载到这个窗口的HTML代码，或者整个浏览器窗口。 比如： 用户对页面进行的操作，如 点击鼠标或悬停光标、按下键盘某个按键、调整浏览器的大小 网页停止加载 提交表达 发生错误 标准事件模型 DOM标准...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/interview-question/bww4boap/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"事件"}],["meta",{"property":"og:description","content":"提问 什么是事件？ 标准事件模型 什么是事件委托？ 事件 事件是 在浏览器窗口中被触发并且通常被绑定在窗口内部的特定部分。 可能是一个元素、一系列元素、被加载到这个窗口的HTML代码，或者整个浏览器窗口。 比如： 用户对页面进行的操作，如 点击鼠标或悬停光标、按下键盘某个按键、调整浏览器的大小 网页停止加载 提交表达 发生错误 标准事件模型 DOM标准..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":1.64,"words":491},"git":{"createdTime":1650030769000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"volodymyr@foxmail.com","commits":12,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"面试题/JavaScript/事件.md","headers":[]}');export{c as comp,s as data};
