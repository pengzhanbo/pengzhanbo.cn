import{_ as t,c as o,e as r,o as c}from"./app-D7KDYWdB.js";const i={};function p(a,e){return c(),o("div",null,[...e[0]||(e[0]=[r('<p><a href="https://cn.vuejs.org/" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/vue-%402-brightgreen" alt="vue@2"></a></p><div class="hint-container tip"><p class="hint-container-title">提问</p><ol><li>简单介绍一下Vue2的响应式原理</li></ol></div><ul><li><p>Vue会将传入<code>data</code> 选项的普通javascript对象，对它的所有 <code>property</code> 进行遍历， 并使用 <code>Object.defineProperty</code> 把这些 <code>property</code> 全部转换为 <code>getter/setter</code>。</p></li><li><p>Vue 通过 <code>getter/setter</code> 来实现监听数据的变化，通过 <code>getter</code> 进行依赖收集，通过<code>setter</code>观察数据变化。</p></li><li><p>Vue 的每个组件实例，都对应一个 <code>Watcher</code> 实例，<code>Watcher</code> 会在组件渲染过程中，把 &quot;接触&quot; 过的数据 property 记录为依赖，当依赖项的 <code>setter</code> 触发时，会通知 <code>Watcher</code> ,使关联的组件重新渲染。</p></li><li><p>Vue 更新 DOM 是异步的，Vue 会开启一个队列，在同一个事件循环中，Vue会缓冲所有数据变更， 如果同一个 <code>Watcher</code> 被触发多次，只会被推入到队列一次。在下一个事件循环<code>tick</code>中， Vue刷新队列并执行实际的工作。这种异步方式，可以去除重复的数据，可以避免不必要的计算和DOM的操作。</p></li></ul><p>由于 Vue2 是通过 <code>Object.defineProperty</code> 实现的 数据劫持，</p><ul><li><p>无法检测对象是否有新增和删除 <code>property</code></p><p>需要通过 <code>this.$set</code> 来添加为对象添加新的<code>property</code>，或者重新进行变量的对象赋值。</p></li><li><p>无法检测通过数组下标进行的赋值操作，无法检测 通过 <code>length</code> 修改数组长度</p><p>需要通过 <code>this.$set</code> 为数组的子元素重新赋值，或者用 splice 方法替换子元素</p></li><li><p>需要对数组的方法进行重写，实现对数组的数据监听</p></li></ul>',5)])])}const d=t(i,[["render",p]]),s=JSON.parse('{"path":"/interview-question/ynqkgvbf/","title":"响应式原理","lang":"zh-CN","frontmatter":{"title":"响应式原理","createTime":"2022/04/20 07:07:48","permalink":"/interview-question/ynqkgvbf/","description":"vue@2 提问 简单介绍一下Vue2的响应式原理 Vue会将传入data 选项的普通javascript对象，对它的所有 property 进行遍历， 并使用 Object.defineProperty 把这些 property 全部转换为 getter/setter。 Vue 通过 getter/setter 来实现监听数据的变化，通过 gette...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"响应式原理\\",\\"image\\":[\\"https://img.shields.io/badge/vue-%402-brightgreen\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/interview-question/ynqkgvbf/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"响应式原理"}],["meta",{"property":"og:description","content":"vue@2 提问 简单介绍一下Vue2的响应式原理 Vue会将传入data 选项的普通javascript对象，对它的所有 property 进行遍历， 并使用 Object.defineProperty 把这些 property 全部转换为 getter/setter。 Vue 通过 getter/setter 来实现监听数据的变化，通过 gette..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.shields.io/badge/vue-%402-brightgreen"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":1.39,"words":418},"git":{"createdTime":1650536919000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"q942450674@outlook.com","commits":8,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"面试题/Vue/v2/响应式原理.md","headers":[]}');export{d as comp,s as data};
