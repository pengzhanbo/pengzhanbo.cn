import{_ as t,c as i,e as o,o as r}from"./app-D7KDYWdB.js";const a={};function n(p,e){return r(),i("div",null,[...e[0]||(e[0]=[o('<p><a href="https://cn.vuejs.org/" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/vue-%402-brightgreen" alt="vue@2"></a></p><div class="hint-container tip"><p class="hint-container-title">提问</p><p>vue2 有多少种组件通信方式？</p></div><h2 id="组件通信方式" tabindex="-1"><a class="header-anchor" href="#组件通信方式"><span>组件通信方式</span></a></h2><p>在 vue中，组件通信的类型，大致可以分为以下几种：</p><ul><li>父子组件间通信</li><li>兄弟组件间通信</li><li>隔代组件间通信</li></ul><h3 id="_1-props-emit" tabindex="-1"><a class="header-anchor" href="#_1-props-emit"><span>1. props/$emit</span></a></h3><p>父组件通过 <code>props</code> 将数据传给子组件， 子组件通过 <code>$emit</code> 将数据更新通知给父组件。</p><p>适用场景：</p><ul><li>父子组件间通信</li></ul><h3 id="_2-event-bus" tabindex="-1"><a class="header-anchor" href="#_2-event-bus"><span>2. Event Bus</span></a></h3><p>通过 事件总线，通过事件派发将数据更新通知给添加了对应的事件监听的组件。</p><p>如，使用一个 空的 Vue实例，通过 <code>vm.$on</code> 注册事件监听，通过 <code>vm.$emit</code> 触发事件; 或者 自定义实现一个 <code>EventEmitter</code></p><p>适用场景：</p><ul><li>父子组件间通信</li><li>兄弟组件间通信</li><li>隔代组件间通信</li></ul><h3 id="_3-provide-inject" tabindex="-1"><a class="header-anchor" href="#_3-provide-inject"><span>3. provide/inject</span></a></h3><p>通过 在一个祖先组件上 使用 <code>provide</code> 为其所有后代组件注入依赖， 在其所有后代组件中，都可以使用 <code>inject</code> 来获取到对应的数据。</p><p>但 <code>provide/inject</code> 的绑定并不是可响应的，可以通过 <code>Vue.observer</code> 来优化并提供响应对象</p><p><code>provide/inject</code> 需要配合使用。</p><p>适用场景：</p><ul><li>父子组件间通信</li><li>隔代组件间通信</li></ul><h3 id="_4-attr-listener" tabindex="-1"><a class="header-anchor" href="#_4-attr-listener"><span>4. $attr / $listener</span></a></h3><p><code>$attr</code> 包含了父作用域中所有不被 props 识别的特性绑定，这些特性可以通过 <code>v-bind=&quot;$attr&quot;</code> 传入内部组件， 通常配合组件的 <code>inheritAttrs</code> 选项一起使用</p><p><code>$listener</code> 包含了父作用域中的 <code>v-on</code>的事件侦听器（不包含 <code>.native</code> 修饰的）。 它可以通过 <code>v-on=&quot;$listener&quot;</code> 传入内部组件</p><p>适用场景：</p><ul><li>父子组件间通信</li><li>隔代组件间通信 （多级嵌套的场景）</li></ul><h3 id="_5-parent-children-ref" tabindex="-1"><a class="header-anchor" href="#_5-parent-children-ref"><span>5. $parent / $children / ref</span></a></h3><ul><li><code>ref</code>: 如果是普通DOM元素上使用，引用指向DOM元素，如果是用在子组件，则引用指向子组件实例</li><li><code>parent/$children</code> 访问父/子 实例</li></ul><p>这种方式可以直接拿到 父/子 实例，即可以对 <code>父/子</code> 进行任意操作。</p><p>（虽然可以用于通信，除非父子组件明确是强耦合的，否则不建议使用)</p><p>适用场景：</p><ul><li>父子组件间通信</li></ul><h3 id="_6-vuex" tabindex="-1"><a class="header-anchor" href="#_6-vuex"><span>6. Vuex</span></a></h3><p>Vuex 实现了单向数据流，通过在 全局维护一个 根状态来存放数据。 组件可以通过 <code>getters</code> 获取状态数据， 通过 <code>dispatch</code> 调用 <code>action</code> 触发 <code>mutation</code> 更新状态数据。 可以将状态根据某种维度划分为各个模块</p><p>适用场景：</p><ul><li>父子组件间通信</li><li>兄弟组件间间通信</li><li>隔代组件间通信</li></ul>',35)])])}const d=t(a,[["render",n]]),l=JSON.parse('{"path":"/interview-question/1ryrldbc/","title":"组件通信方式","lang":"zh-CN","frontmatter":{"title":"组件通信方式","createTime":"2022/04/23 02:58:07","permalink":"/interview-question/1ryrldbc/","description":"vue@2 提问 vue2 有多少种组件通信方式？ 组件通信方式 在 vue中，组件通信的类型，大致可以分为以下几种： 父子组件间通信 兄弟组件间通信 隔代组件间通信 1. props/$emit 父组件通过 props 将数据传给子组件， 子组件通过 $emit 将数据更新通知给父组件。 适用场景： 父子组件间通信 2. Event Bus 通过 事...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件通信方式\\",\\"image\\":[\\"https://img.shields.io/badge/vue-%402-brightgreen\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/interview-question/1ryrldbc/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"组件通信方式"}],["meta",{"property":"og:description","content":"vue@2 提问 vue2 有多少种组件通信方式？ 组件通信方式 在 vue中，组件通信的类型，大致可以分为以下几种： 父子组件间通信 兄弟组件间通信 隔代组件间通信 1. props/$emit 父组件通过 props 将数据传给子组件， 子组件通过 $emit 将数据更新通知给父组件。 适用场景： 父子组件间通信 2. Event Bus 通过 事..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.shields.io/badge/vue-%402-brightgreen"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":2.23,"words":669},"git":{"createdTime":1650697746000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"q942450674@outlook.com","commits":8,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"面试题/Vue/v2/组件通信方式.md","headers":[]}');export{d as comp,l as data};
