import{_ as i,c as s,e,o as a}from"./app-D7KDYWdB.js";const n="/images/rust-untitled.png",r={};function l(p,t){return a(),s("div",null,[...t[0]||(t[0]=[e(`<div class="language-rust" data-highlighter="shiki" data-ext="rust" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-rust"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">fn</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> add</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">i</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> i32</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> j</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> i32</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> i32</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  i</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> j</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span></span></code></pre></div><div style="text-align:center;"><p><img src="`+n+'" alt="Untitled"></p></div><h2 id="函数要点" tabindex="-1"><a class="header-anchor" href="#函数要点"><span>函数要点</span></a></h2><ul><li>函数名和变量名使用 <strong>蛇形命名法</strong> 例如 <code>fn add_two() -&gt; {}</code></li><li>函数的位置可以随便放，rust不关心我们在哪里定义了函数</li><li>每个函数参数都需要标注类型</li></ul><h2 id="函数返回" tabindex="-1"><a class="header-anchor" href="#函数返回"><span>函数返回</span></a></h2><ul><li>函数的返回值就是函数的最后一条 <strong>表达式</strong> 的返回值</li><li>也可以使用 <code>return</code> 提前返回</li></ul><p><strong>特殊返回类型:</strong></p><ul><li>无返回值 <code>()</code> 函数没有返回值，那么返回一个 <code>()</code> 通过 <code>;</code> 结尾的表达式返回 <code>()</code></li></ul>',8)])])}const o=i(r,[["render",l]]),d=JSON.parse('{"path":"/learn-rust/function/","title":"函数","lang":"zh-CN","frontmatter":{"title":"函数","createTime":"2022/06/03 05:43:50","permalink":"/learn-rust/function/","description":"Untitled 函数要点 函数名和变量名使用 蛇形命名法 例如 fn add_two() -> {} 函数的位置可以随便放，rust不关心我们在哪里定义了函数 每个函数参数都需要标注类型 函数返回 函数的返回值就是函数的最后一条 表达式 的返回值 也可以使用 return 提前返回 特殊返回类型: 无返回值 () 函数没有返回值，那么返回一个 () ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"函数\\",\\"image\\":[\\"https://pengzhanbo.cn/images/rust-untitled.png\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/learn-rust/function/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"函数"}],["meta",{"property":"og:description","content":"Untitled 函数要点 函数名和变量名使用 蛇形命名法 例如 fn add_two() -> {} 函数的位置可以随便放，rust不关心我们在哪里定义了函数 每个函数参数都需要标注类型 函数返回 函数的返回值就是函数的最后一条 表达式 的返回值 也可以使用 return 提前返回 特殊返回类型: 无返回值 () 函数没有返回值，那么返回一个 () ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pengzhanbo.cn/images/rust-untitled.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":0.51,"words":153},"git":{"createdTime":1677713732000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"volodymyr@foxmail.com","commits":7,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"rust学习简记/基础入门/函数.md","headers":[]}');export{o as comp,d as data};
