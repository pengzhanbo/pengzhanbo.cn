import{_ as i,c as a,e,o as n}from"./app-D7KDYWdB.js";const h={};function l(k,s){return n(),a("div",null,[...s[0]||(s[0]=[e(`<p><code>Docker</code> 是一个开源的应用容器引擎，它可以将应用打包到一个可移植的镜像中， 使得应用可以更轻便的部署在任意 Linux 或 Windows 的操作系统的机器上。 同时还提供了环境隔离，很大程度上避免了不同环境不一致带来的各种问题。 <code>Docker</code>可轻便移植的特性，也极大的促进了 <code>CI/CD</code> 的发展。</p><p><strong><code>Docker</code>架构图</strong></p><p><img src="https://docs.docker.com/engine/images/architecture.svg" alt="architecture"></p><p>从图中可以看出， <code>Docker</code> 的组成部分包括：</p><ul><li><code>docker client</code>: <code>docker</code> 命令行工具</li><li><code>docker host</code>: 宿主机，即 <code>docker daemon</code> 的运行环境服务器</li><li><code>docker daemon</code>: <code>docker</code> 的守护进程，<code>docker client</code> 通过命令行与 <code>docker daemon</code> 进行交互</li><li><code>container</code>: 最小型的一个操作系统环境，可以对各种服务和应用容器化</li><li><code>image</code>: 镜像，可以理解为一个容器的模板配置，通过一个镜像可以启动多个容器</li><li><code>registry</code>: 镜像仓库，存储各种镜像，可以从镜像仓库拉取或推送镜像。</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><blockquote><p><a href="https://docs.docker.com/engine/install/" target="_blank" rel="noopener noreferrer">官方安装文档</a></p></blockquote><p>以下仅说明在 <code>CentOS</code> 服务器上的安装过程</p><h3 id="centos-安装" tabindex="-1"><a class="header-anchor" href="#centos-安装"><span>CentOS 安装</span></a></h3><ol><li>安装依赖</li></ol><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">yum</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> yum-utils</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> device-mapper-persistent-data</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> lvm2</span></span></code></pre></div><ol start="2"><li>添加 docker 的yum镜像源，如果在国内，添加阿里云的镜像源</li></ol><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 安装 docker 官方的镜像源</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">yum-config-manager</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --add-repo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://download.docker.com/linux/centos/docker-ce.repo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 如果在国内，安装阿里云的镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">yum-config-manager</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --add-repo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span></code></pre></div><ol start="3"><li>安装 docker</li></ol><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 安装 docker</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> yum</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker-ce</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker-ce-cli</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> containerd.io</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker-buildx-plugin</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker-compose-plugin</span></span></code></pre></div><ol start="4"><li>启动服务</li></ol><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> enable</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> start</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span></span></code></pre></div><p>当 <code>docker</code> 安装成功后，可以使用以下命令查看 <code>docker</code> 信息</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 查看版本信息</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 查看详细版本信息</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 查看详细配置信息</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> info</span></span></code></pre></div><h3 id="守护进程配置" tabindex="-1"><a class="header-anchor" href="#守护进程配置"><span>守护进程配置</span></a></h3><p><code>dockerd</code> 是 <code>docker</code> 的守护进程，<code>dockerd</code> 可以通过配置文件进行配置，在 <code>linux</code> 下的配置文件位置在 <code>/etc/docker/daemon.json</code>，更详细内容可以参考 <a href="https://docs.docker.com/engine/reference/commandline/dockerd/" target="_blank" rel="noopener noreferrer">官方文档</a>。</p><p>日志引擎为 <code>json-file</code>，对日志结构化，结合合适的日志系统，方便定位日志。 存储引擎为 <code>overrlay2</code>。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 设置 docker daemon</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cat</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/docker/daemon.json</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;&lt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">EOF</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  &quot;log-opts&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    &quot;max-size&quot;: &quot;100m&quot;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  },</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  &quot;storage-driver&quot;: &quot;overlay2&quot;,</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  &quot;storage-opts&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    &quot;overlay2.override_kernel_check=true&quot;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  ]</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">}</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 重启 docker</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> restart</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="镜像" tabindex="-1"><a class="header-anchor" href="#镜像"><span>镜像</span></a></h2><p>镜像是用于创建容器的配置文件。 容器可以视为是一个最小型的操作系统。</p><p><code>docker</code> 的镜像和和容器都使用了 <code>unionFS</code> 做分层存储，镜像作为只读层是共享的，容器在镜像之上附加了一层可写层，最大程度的减少了空间的浪费。</p><p><img src="https://docs.docker.com/storage/storagedriver/images/sharing-layers.jpg" alt="sharing layers"></p><div class="hint-container info"><p class="hint-container-title">Union file systems</p><p><code>UnionFS</code> 是一种分层、轻量级并且高性能的文件系统，支持对文件系统的修改作为一次提交来一层层的叠加。<code>docker</code> 的镜像与容器就是分层存储，可用的存储引擎有 <code>aufs</code>，<code>overlay</code> 等。</p><p>关于分层存储的详细内容可以查看官方文档 <a href="https://docs.docker.com/storage/storagedriver/" target="_blank" rel="noopener noreferrer">docker: About storage drivers</a></p></div><h3 id="镜像仓库与拉取" tabindex="-1"><a class="header-anchor" href="#镜像仓库与拉取"><span>镜像仓库与拉取</span></a></h3><blockquote><p><a href="https://hub.docker.com/explore/" target="_blank" rel="noopener noreferrer">官方镜像仓库</a></p></blockquote><p>多数情况下，我们不需要自己构建镜像，可以直接从 官方镜像仓库拉取。</p><p>使用命令 <code>docker pull</code> 进行镜像拉取。 通过 <code>docker inspect</code> 查看镜像信息：</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 加入拉取一个 node:alpine 的镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> node:alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 查看镜像信息</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> inspect</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> node:alpine</span></span></code></pre></div><h3 id="构建镜像与发布" tabindex="-1"><a class="header-anchor" href="#构建镜像与发布"><span>构建镜像与发布</span></a></h3><p>使用命令 <code>docker build</code> 构建镜像。<code>docker build</code> 会使用当前目录的 <code>dockerfile</code> 构建镜像。</p><p>使用 <code>-t</code> 指定标签</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># -t node-base:10: 镜像以及版本号</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># .: 指当前路径</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> node-base:10</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span></code></pre></div><p>当镜像构建成功，使用 <code>docker push</code> 推送镜像到仓库。</p><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile"><span>Dockerfile</span></a></h2><p>在使用 <code>docker</code> 部署自己应用时，往往需要自己构建镜像。</p><p><code>docker</code> 使用 <code>Dockerfile</code> 作为配置文件构建镜像：</p><div class="language-dockerfile line-numbers-mode" data-highlighter="shiki" data-ext="dockerfile" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-dockerfile"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> node:alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ADD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> package.json package-lock.json /code/</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">WORKDIR</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> /code</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">RUN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> npm install --production</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ADD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> . /code</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CMD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> npm start</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="from" tabindex="-1"><a class="header-anchor" href="#from"><span>FROM</span></a></h3><p>基于一个旧有的镜像，格式如下</p><div class="language-dockerfile" data-highlighter="shiki" data-ext="dockerfile" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-dockerfile"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> &lt;image&gt; [</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> &lt;name&gt;]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 在多阶段构建时会用到</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> &lt;image&gt;[:&lt;tag&gt;] [</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> &lt;name&gt;]</span></span></code></pre></div><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add"><span>ADD</span></a></h3><p>把目录，或者 url 地址文件加入到镜像的文件系统中</p><div class="language-dockerfile" data-highlighter="shiki" data-ext="dockerfile" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-dockerfile"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ADD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [--chown=&lt;user&gt;:&lt;group&gt;] &lt;src&gt;... &lt;dest&gt;</span></span></code></pre></div><h3 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span>RUN</span></a></h3><p>执行命令，由于 ufs 的文件系统，它会在当前镜像的顶层新增一层</p><div class="language-dockerfile" data-highlighter="shiki" data-ext="dockerfile" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-dockerfile"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">RUN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> &lt;command&gt;</span></span></code></pre></div><h3 id="cmd" tabindex="-1"><a class="header-anchor" href="#cmd"><span>CMD</span></a></h3><p>指定容器如何启动</p><p>一个 <code>Dockerfile</code> 中只允许有一个 <code>CMD</code></p><div class="language-dockerfile" data-highlighter="shiki" data-ext="dockerfile" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-dockerfile"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># exec form, this is the preferred form</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CMD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;executable&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;param1&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;param2&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># as default parameters to ENTRYPOINT</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CMD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;param1&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;param2&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># shell form</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CMD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> command param1 param2</span></span></code></pre></div><h2 id="容器" tabindex="-1"><a class="header-anchor" href="#容器"><span>容器</span></a></h2><p>镜像与容器的关系，类似于代码与进程的关系。</p><ul><li><code>docker run</code> 创建容器</li><li><code>docker stop</code> 停止容器</li><li><code>docker rm</code> 删除容器</li></ul><h3 id="创建容器" tabindex="-1"><a class="header-anchor" href="#创建容器"><span>创建容器</span></a></h3><p>基于 <code>nginx</code> 镜像创建一个最简单的容器：启动一个最简单的 http 服务</p><p>使用 <code>docker run</code> 来启动容器，<code>docker ps</code> 查看容器启动状态</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 8888:80</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx:alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ps</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -l</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">CONTAINER</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ID</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        IMAGE</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                COMMAND</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                  CREATED</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">             STATUS</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">              PORTS</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                    NAMES</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">404e88f0d90c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        nginx:alpine</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">         &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nginx -g &#39;daemon of…</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">   4</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> minutes</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ago</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">       Up</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> minutes</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        0.0.0.0:8888</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">80/tcp</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     nginx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">CONTAINER</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ID</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        IMAGE</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                COMMAND</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                  CREATED</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">             STATUS</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">              PORTS</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                    NAMES</span></span></code></pre></div><p>其中:</p><ul><li><code>-d</code>: 启动一个 daemon 进程</li><li><code>--name</code>: 为容器指定名称</li><li><code>-p host-port:container-port</code>: 宿主机与容器端口映射，方便容器对外提供服务</li><li><code>nginx:alpine</code>: 基于该镜像创建容器</li></ul><p>此时在宿主机使用 curl 测试容器提供的服务是否正常</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">curl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> localhost:8888</span></span></code></pre></div><p>进入容器环境中，使用 <code>docker exec -it container-name</code> 命令</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> exec</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sh</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">/</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">/</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">/</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #</span></span></code></pre></div><h3 id="容器管理" tabindex="-1"><a class="header-anchor" href="#容器管理"><span>容器管理</span></a></h3><ul><li><code>docker ps</code> 列出所有容器</li></ul><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ps</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">CONTAINER</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ID</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        IMAGE</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                COMMAND</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                  CREATED</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">             STATUS</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">              PORTS</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                    NAMES</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">404e88f0d90c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        nginx:alpine</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">         &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nginx -g &#39;daemon of…</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">   4</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> minutes</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ago</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">       Up</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> minutes</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        0.0.0.0:8888</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">80/tcp</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     nginx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">498e7d74fb4f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        nginx:alpine</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">         &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nginx -g &#39;daemon of…</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">   7</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> minutes</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ago</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">       Up</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 7</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> minutes</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        80/tcp</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                   lucid_mirzakhani</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">2ce10556dc8f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        redis:4.0.6-alpine</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">   &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">docker-entrypoint.s…</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">   2</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> months</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ago</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        Up</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> months</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">         0.0.0.0:6379</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">6379/tcp</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   apolloserverstarter_redis_1</span></span></code></pre></div><ul><li><code>docker port</code> 查看容器端口映射</li></ul><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> port</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">80/tcp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> -</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0.0.0.0:8888</span></span></code></pre></div><ul><li><code>docker stats</code> 查看容器资源占用</li></ul><div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> stats</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">CONTAINER</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ID</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        NAME</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                CPU</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> %</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">               MEM</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> USAGE</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> LIMIT</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     MEM</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> %</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">               NET</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> I/O</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">             BLOCK</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> I/O</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">           PIDS</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">404e88f0d90c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        nginx</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">               0.00%</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">               1.395MiB</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 1.796GiB</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   0.08%</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">               632B</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 1.27kB</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">       0B</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0B</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">             2</span></span></code></pre></div>`,75)])])}const p=i(h,[["render",l]]),d=JSON.parse('{"path":"/article/0ed6asz0/","title":"Docker 简易入门指南","lang":"zh-CN","frontmatter":{"title":"Docker 简易入门指南","createTime":"2021/12/28 12:51:54","permalink":"/article/0ed6asz0/","tags":["deploy"],"description":"Docker 是一个开源的应用容器引擎，它可以将应用打包到一个可移植的镜像中， 使得应用可以更轻便的部署在任意 Linux 或 Windows 的操作系统的机器上。 同时还提供了环境隔离，很大程度上避免了不同环境不一致带来的各种问题。 Docker可轻便移植的特性，也极大的促进了 CI/CD 的发展。 Docker架构图 architecture 从图...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker 简易入门指南\\",\\"image\\":[\\"https://docs.docker.com/engine/images/architecture.svg\\",\\"https://docs.docker.com/storage/storagedriver/images/sharing-layers.jpg\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/article/0ed6asz0/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"Docker 简易入门指南"}],["meta",{"property":"og:description","content":"Docker 是一个开源的应用容器引擎，它可以将应用打包到一个可移植的镜像中， 使得应用可以更轻便的部署在任意 Linux 或 Windows 的操作系统的机器上。 同时还提供了环境隔离，很大程度上避免了不同环境不一致带来的各种问题。 Docker可轻便移植的特性，也极大的促进了 CI/CD 的发展。 Docker架构图 architecture 从图..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://docs.docker.com/engine/images/architecture.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:tag","content":"deploy"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":5.1,"words":1529},"git":{"createdTime":1676966555000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"volodymyr@foxmail.com","commits":7,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"blog/1.前端/11.部署/Docker入门.md","headers":[],"categoryList":[{"id":"72e6d5","sort":1,"name":"前端"},{"id":"ecbe03","sort":11,"name":"部署"}]}');export{p as comp,d as data};
