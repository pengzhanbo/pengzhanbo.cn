import{_ as t,c as a,e as r,o as n}from"./app-D7KDYWdB.js";const o={};function p(i,e){return n(),a("div",null,[...e[0]||(e[0]=[r('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p><mark>算法</mark> ，顾名思义，即计算的方法。</p><p>算法通常用于解决特定的计算任务，但与可以直接在计算机上运行的程序不同，算法使用数学化的描述，更加侧重于思想，可以被看作抽象的程序。 同一个算法可以有许多种不同的实现方式，两个不同的程序里也可能使用了同一种算法。</p><h2 id="复杂度" tabindex="-1"><a class="header-anchor" href="#复杂度"><span>复杂度</span></a></h2><p><mark>时间复杂度</mark> 和 <mark>空间复杂度</mark> 是衡量一个算法效率的重要标准。</p><h3 id="基本操作数" tabindex="-1"><a class="header-anchor" href="#基本操作数"><span>基本操作数</span></a></h3><p>同一个算法在不同的计算机上运行的速度会有一定的差别，并且实际运行速度难以在理论上进行计算， 实际去测量又比较麻烦，所以我们通常考虑的不是算法运行的实际用时，而是算法运行所需要进行的基本操作的数量。</p><div class="hint-container note"><p class="hint-container-title">在普通的计算机上，加减乘除、访问变量（基本数据类型的变量，下同）、给变量赋值等都可以看作基本操作。</p></div><p>对基本操作的计数或是估测可以作为评判算法用时的指标。</p><h3 id="时间复杂度" tabindex="-1"><a class="header-anchor" href="#时间复杂度"><span>时间复杂度</span></a></h3><p>衡量一个算法的快慢，一定要考虑数据规模的大小。 所谓数据规模，一般指输入的数字个数、输入中给出的图的点数与边数等等。一般来说，数据规模越大，算法的用时就越长。</p><p>我们衡量一个算法的效率时，最重要的不是看它在某个数据规模下的用时， 而是 <mark>看它的用时随数据规模而增长的趋势</mark>，即 <strong>时间复杂度</strong>。</p><p>当然，算法的运行用时并非完全由输入规模决定，而是也与输入的内容相关。所以，时间复杂度又分为几种，例如：</p><ul><li><strong>最坏时间复杂度</strong>，即每个输入规模下用时最长的输入对应的时间复杂度。在算法竞赛中，由于输入可以在给定的数据范围内任意给定，我们为保证算法能够通过某个数据范围内的任何数据，一般考虑最坏时间复杂度。</li><li><strong>平均（期望）时间复杂度</strong>，即每个输入规模下所有可能输入对应用时的平均值的复杂度（随机输入下期望用时的复杂度）。</li></ul><h3 id="空间复杂度" tabindex="-1"><a class="header-anchor" href="#空间复杂度"><span>空间复杂度</span></a></h3><p>类似地，算法 <mark>所使用的空间随输入规模变化的趋势</mark> 可以用 <strong>空间复杂度</strong> 来衡量。</p>',16)])])}const c=t(o,[["render",p]]),m=JSON.parse('{"path":"/algorithm/overview/","title":"介绍","lang":"zh-CN","frontmatter":{"title":"介绍","createTime":"2019/06/09 08:18:40","permalink":"/algorithm/overview/","description":"概述 算法 ，顾名思义，即计算的方法。 算法通常用于解决特定的计算任务，但与可以直接在计算机上运行的程序不同，算法使用数学化的描述，更加侧重于思想，可以被看作抽象的程序。 同一个算法可以有许多种不同的实现方式，两个不同的程序里也可能使用了同一种算法。 复杂度 时间复杂度 和 空间复杂度 是衡量一个算法效率的重要标准。 基本操作数 同一个算法在不同的计算...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"介绍\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/algorithm/overview/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"介绍"}],["meta",{"property":"og:description","content":"概述 算法 ，顾名思义，即计算的方法。 算法通常用于解决特定的计算任务，但与可以直接在计算机上运行的程序不同，算法使用数学化的描述，更加侧重于思想，可以被看作抽象的程序。 同一个算法可以有许多种不同的实现方式，两个不同的程序里也可能使用了同一种算法。 复杂度 时间复杂度 和 空间复杂度 是衡量一个算法效率的重要标准。 基本操作数 同一个算法在不同的计算..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":2.21,"words":663},"git":{"createdTime":1749647714000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"volodymyr@foxmail.com","commits":2,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"算法/算法/0.介绍.md","headers":[]}');export{c as comp,m as data};
