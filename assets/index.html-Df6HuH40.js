import{_ as t,c as i,e as a,o as s}from"./app-D7KDYWdB.js";const r={};function o(n,e){return s(),i("div",null,[...e[0]||(e[0]=[a('<p><a href="https://staging-cn.vuejs.org/" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/vue-%403-brightgreen" alt="vue@3"></a></p><div class="hint-container tip"><p class="hint-container-title">提问</p><ol><li>简单介绍一下Vue的响应式原理</li><li>vue2 和 vue3 的响应式对象有什么区别？</li></ol></div><h2 id="vue-响应式原理" tabindex="-1"><a class="header-anchor" href="#vue-响应式原理"><span>Vue 响应式原理</span></a></h2><p>在 javascript 中，有两种劫持属性访问的方式： <code>getter/setter</code> 和 <code>Proxies</code>。 在<code>Vue3</code> 中，使用了 <code>Proxy</code> 来创建响应式对象。</p><ul><li><p>在 Vue中，跟数据关联的其他操作行为，被称为<code>副作用 effect</code>，Vue内部会维护一个使用 <code>WeakMap</code> 定义的副作用队列， 将副作用订阅都存储在其中。</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">WeakMap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">target</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Map</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Set</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">effect</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;&gt;&gt;</span></span></code></pre></div></li><li><p>在 数据的 <code>getter</code> 方法中，使用 <code>track</code> 函数检查是否有正在运行的副作用，然后将这个副作用添加到该数据的订阅者 <code>Set</code> 中。</p></li><li><p>在数据的 <code>setter</code> 方法中，当数据发生改变，则找到该数据的所有订阅的副作用，然后一一执行这些副作用。</p></li><li><p>对于组件实例，将DOM渲染也认为是副作用的一种，数据更新时，同样会去执行这个副作用。</p></li></ul><h2 id="vue3-和-vue2-实现响应式原理的区别" tabindex="-1"><a class="header-anchor" href="#vue3-和-vue2-实现响应式原理的区别"><span>Vue3 和 Vue2 实现响应式原理的区别</span></a></h2><ul><li><p>相比于 Vue2， Vue3的由于采用了 <code>Proxy</code>的方式来实现响应式对象， 响应式数据能够检测到响应式对象的属性的添加和删除</p></li><li><p>使用<code>WeakMap</code>数据结构来保存响应式对象的副作用，在响应式对象没有再被引用时，能够及时的被垃圾回收，减少内存开销。</p></li></ul>',7)])])}const l=t(r,[["render",o]]),h=JSON.parse('{"path":"/interview-question/lkriz1wa/","title":"响应式原理","lang":"zh-CN","frontmatter":{"title":"响应式原理","createTime":"2022/04/20 10:02:30","permalink":"/interview-question/lkriz1wa/","description":"vue@3 提问 简单介绍一下Vue的响应式原理 vue2 和 vue3 的响应式对象有什么区别？ Vue 响应式原理 在 javascript 中，有两种劫持属性访问的方式： getter/setter 和 Proxies。 在Vue3 中，使用了 Proxy 来创建响应式对象。 在 Vue中，跟数据关联的其他操作行为，被称为副作用 effect，V...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"响应式原理\\",\\"image\\":[\\"https://img.shields.io/badge/vue-%403-brightgreen\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/interview-question/lkriz1wa/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"响应式原理"}],["meta",{"property":"og:description","content":"vue@3 提问 简单介绍一下Vue的响应式原理 vue2 和 vue3 的响应式对象有什么区别？ Vue 响应式原理 在 javascript 中，有两种劫持属性访问的方式： getter/setter 和 Proxies。 在Vue3 中，使用了 Proxy 来创建响应式对象。 在 Vue中，跟数据关联的其他操作行为，被称为副作用 effect，V..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.shields.io/badge/vue-%403-brightgreen"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":1.28,"words":384},"git":{"createdTime":1650536919000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"q942450674@outlook.com","commits":12,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"面试题/Vue/v3/响应式原理.md","headers":[]}');export{l as comp,h as data};
