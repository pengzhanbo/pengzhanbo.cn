import{_ as i,c as a,e as n,o as e}from"./app-D7KDYWdB.js";const l={};function h(t,s){return e(),a("div",null,[...s[0]||(s[0]=[n(`<p>在人工智能快速发展的今天，我们与 AI 的交互方式正在发生根本性变化。其中，<strong>Prompt Engineering</strong>（提示工程）作为一门新兴的技能，正成为解锁 AI 潜力的关键所在。</p><h2 id="什么是-prompt-engineering" tabindex="-1"><a class="header-anchor" href="#什么是-prompt-engineering"><span>什么是 Prompt Engineering？</span></a></h2><p><strong>Prompt Engineering</strong> 指的是设计、优化和完善输入给 AI 模型的提示（prompt），以获得更准确、相关和有用输出的系统性方法。简单来说，就是<strong>学会如何更好地向 AI 提问</strong>。</p><p>这不仅仅是简单的&quot;提问&quot;，而是包含了：</p><ul><li>理解 AI 模型的工作原理</li><li>设计清晰、具体的指令</li><li>提供适当的上下文和约束条件</li><li>通过迭代优化获得最佳结果</li></ul><h2 id="为什么-prompt-engineering-如此重要" tabindex="-1"><a class="header-anchor" href="#为什么-prompt-engineering-如此重要"><span>为什么 Prompt Engineering 如此重要？</span></a></h2><h3 id="_1-质量差距巨大" tabindex="-1"><a class="header-anchor" href="#_1-质量差距巨大"><span>1. 质量差距巨大</span></a></h3><p>同样的 AI 模型，不同的提示会产生天壤之别的结果：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 普通提示</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;写一个函数&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 工程化提示</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;请用 JavaScript 编写一个函数，接收数字数组作为参数，返回去重后的新数组。要求：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">1. 不使用 Set 对象</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">2. 时间复杂度为 O(n)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">3. 包含详细的 JSDoc 注释</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">4. 提供使用示例&quot;</span></span></code></pre></div><h3 id="_2-成本效益显著" tabindex="-1"><a class="header-anchor" href="#_2-成本效益显著"><span>2. 成本效益显著</span></a></h3><p>精心设计的提示可以减少：</p><ul><li>重复请求次数</li><li>结果修正时间</li><li>总体计算资源消耗</li></ul><h3 id="_3-专业化需求增长" tabindex="-1"><a class="header-anchor" href="#_3-专业化需求增长"><span>3. 专业化需求增长</span></a></h3><p>随着 AI 在各行业的深入应用，专业的 Prompt Engineering 技能成为：</p><ul><li>开发者的核心竞争力</li><li>产品经理的必备技能</li><li>内容创作者的效率工具</li></ul><h2 id="prompt-engineering-的核心原则" tabindex="-1"><a class="header-anchor" href="#prompt-engineering-的核心原则"><span>Prompt Engineering 的核心原则</span></a></h2><h3 id="_1-明确性-clarity" tabindex="-1"><a class="header-anchor" href="#_1-明确性-clarity"><span>1. 明确性 (Clarity)</span></a></h3><p><strong>模糊提示：</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;帮我处理数据&quot;</span></span></code></pre></div><p><strong>明确提示：</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;请分析以下销售数据，计算：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 每个产品的月销售额</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 同比增长率</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 生成前5名产品的排名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">数据格式：CSV</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">输出要求：Markdown 表格&quot;</span></span></code></pre></div><h3 id="_2-上下文提供-context-provision" tabindex="-1"><a class="header-anchor" href="#_2-上下文提供-context-provision"><span>2. 上下文提供 (Context Provision)</span></a></h3><p><strong>缺乏上下文：</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;优化这段代码&quot;</span></span></code></pre></div><p><strong>提供充分上下文：</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;这是 React 组件中的性能优化问题：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 组件在每次渲染时都重新计算大量数据</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 用户列表包含 1000+ 项</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 需要避免不必要的重渲染</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">请提供具体的 useMemo 和 useCallback 优化方案&quot;</span></span></code></pre></div><h3 id="_3-约束条件-constraints" tabindex="-1"><a class="header-anchor" href="#_3-约束条件-constraints"><span>3. 约束条件 (Constraints)</span></a></h3><p><strong>无约束：</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;写一篇技术文章&quot;</span></span></code></pre></div><p><strong>有约束：</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;以初级前端开发者为目标读者，写一篇关于 React Hooks 的入门文章：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 字数：1500字左右</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 包含 useState 和 useEffect 的实用示例</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 避免使用复杂术语</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 采用友好的教学语气&quot;</span></span></code></pre></div><h3 id="_4-示例引导-example-driven" tabindex="-1"><a class="header-anchor" href="#_4-示例引导-example-driven"><span>4. 示例引导 (Example-driven)</span></a></h3><p><strong>零样本提示：</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;分类这些文本&quot;</span></span></code></pre></div><p><strong>少样本提示：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;根据以下示例进行分类：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">示例1：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">文本：&quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">这个产品太棒了，我非常喜欢！</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">情感：积极</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">示例2：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">文本：&quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">服务质量很差，不会再来了</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">情感：消极</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">现在请分类：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">文本：&quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">还行，一般般</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">情感：&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实际应用场景" tabindex="-1"><a class="header-anchor" href="#实际应用场景"><span>实际应用场景</span></a></h2><h3 id="前端开发中的-prompt-engineering" tabindex="-1"><a class="header-anchor" href="#前端开发中的-prompt-engineering"><span>前端开发中的 Prompt Engineering</span></a></h3><h4 id="代码生成与优化" tabindex="-1"><a class="header-anchor" href="#代码生成与优化"><span>代码生成与优化</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 工程化提示示例</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;作为资深前端专家，请优化以下 React 组件：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">问题描述：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">1. 组件渲染性能低下</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">2. 事件处理函数每次渲染都重新创建</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">3. 缺乏必要的错误边界</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">优化要求：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 使用 React.memo 避免不必要渲染</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 合理使用 useCallback 和 useMemo</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 添加 PropTypes 类型检查</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 实现简单的错误处理</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">请提供优化后的完整代码，并解释每个优化的原因。&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="技术方案设计" tabindex="-1"><a class="header-anchor" href="#技术方案设计"><span>技术方案设计</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 架构设计提示</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;项目背景：需要为电商平台设计前端架构</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">技术要求：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 使用 Next.js 13+ 和 TypeScript</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 支持服务端渲染和静态生成</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 状态管理使用 Zustand</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 样式方案采用 Tailwind CSS</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">- 需要良好的 SEO 支持</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">请提供：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">1. 项目目录结构建议</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">2. 核心模块划分方案</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">3. 性能优化策略</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">4. 推荐的开发工具和流程&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="进阶技巧与策略" tabindex="-1"><a class="header-anchor" href="#进阶技巧与策略"><span>进阶技巧与策略</span></a></h2><h3 id="_1-链式思考-chain-of-thought" tabindex="-1"><a class="header-anchor" href="#_1-链式思考-chain-of-thought"><span>1. 链式思考 (Chain-of-Thought)</span></a></h3><p>引导 AI 展示推理过程：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;请分步骤解决这个问题：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">问题：一个列表包含 [2, 7, 11, 15]，目标值是 9，找出和为目标值的两个数。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">第一步：理解问题要求...</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">第二步：考虑可能的解法...</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">第三步：实施最优方案...</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">第四步：验证结果...&quot;</span></span></code></pre></div><h3 id="_2-角色扮演-role-playing" tabindex="-1"><a class="header-anchor" href="#_2-角色扮演-role-playing"><span>2. 角色扮演 (Role-playing)</span></a></h3><p>为 AI 分配特定角色：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;假设你是谷歌的首席前端架构师，正在评审一个大型项目的代码质量。请以专业、严谨但建设性的语气，分析以下代码并提出改进建议：&quot;</span></span></code></pre></div><h3 id="_3-模板化提示" tabindex="-1"><a class="header-anchor" href="#_3-模板化提示"><span>3. 模板化提示</span></a></h3><p>创建可复用的提示模板：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> codeReviewPrompt</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">code</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> requirements</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> \`</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">代码审查请求：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">代码内容：</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">code</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">审查要求：</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">requirements</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">请从以下角度审查：</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">1. 代码质量和可读性</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">2. 性能考虑</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">3. 安全性问题</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">4. 最佳实践遵循情况</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">5. 具体的改进建议</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">\`</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常见陷阱与避免方法" tabindex="-1"><a class="header-anchor" href="#常见陷阱与避免方法"><span>常见陷阱与避免方法</span></a></h2><h3 id="_1-提示过于宽泛" tabindex="-1"><a class="header-anchor" href="#_1-提示过于宽泛"><span>1. 提示过于宽泛</span></a></h3><p><strong>问题：</strong> &quot;帮我写代码&quot; <strong>解决：</strong> 提供具体的需求、约束和上下文</p><h3 id="_2-缺乏具体示例" tabindex="-1"><a class="header-anchor" href="#_2-缺乏具体示例"><span>2. 缺乏具体示例</span></a></h3><p><strong>问题：</strong> &quot;生成一些数据&quot; <strong>解决：</strong> 提供期望的输出格式和样本</p><h3 id="_3-忽略模型限制" tabindex="-1"><a class="header-anchor" href="#_3-忽略模型限制"><span>3. 忽略模型限制</span></a></h3><p><strong>问题：</strong> 要求超出模型能力范围的任务 <strong>解决：</strong> 了解模型的特长和局限，合理设定期望</p><h3 id="_4-单次尝试心态" tabindex="-1"><a class="header-anchor" href="#_4-单次尝试心态"><span>4. 单次尝试心态</span></a></h3><p><strong>问题：</strong> 期望第一次提示就获得完美结果 <strong>解决：</strong> 采用迭代优化，基于结果调整提示</p><h2 id="工具与资源推荐" tabindex="-1"><a class="header-anchor" href="#工具与资源推荐"><span>工具与资源推荐</span></a></h2><h3 id="_1-提示优化工具" tabindex="-1"><a class="header-anchor" href="#_1-提示优化工具"><span>1. 提示优化工具</span></a></h3><ul><li><strong>OpenAI Playground</strong>：实验和优化提示</li><li><strong>PromptPerfect</strong>：自动提示优化</li><li><strong>AI Prompt Generator</strong>：生成专业提示</li></ul><h3 id="_2-学习资源" tabindex="-1"><a class="header-anchor" href="#_2-学习资源"><span>2. 学习资源</span></a></h3><ul><li><strong>OpenAI 提示工程指南</strong>：官方最佳实践</li><li><strong>Prompt Engineering Institute</strong>：专业课程和案例</li><li><strong><a href="https://github.com/promptslab/Awesome-Prompt-Engineering" target="_blank" rel="noopener noreferrer">Awesome Prompt Engineering</a></strong>：GitHub 上的资源集合</li></ul><h3 id="_3-实践平台" tabindex="-1"><a class="header-anchor" href="#_3-实践平台"><span>3. 实践平台</span></a></h3><ul><li><strong>ChatGPT</strong>：日常练习</li><li><strong>Claude</strong>：不同的提示风格测试</li><li><strong>Midjourney</strong>：视觉领域的提示工程</li></ul><h2 id="未来展望" tabindex="-1"><a class="header-anchor" href="#未来展望"><span>未来展望</span></a></h2><p>Prompt Engineering 正在从&quot;技巧&quot;发展为&quot;学科&quot;：</p><ol><li><strong>标准化</strong>：行业标准和工作流的建立</li><li><strong>工具化</strong>：专门的提示设计和测试工具</li><li><strong>集成化</strong>：与开发流程的深度集成</li><li><strong>专业化</strong>：针对不同领域的专业提示模式</li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>Prompt Engineering 不是简单的&quot;提问技巧&quot;，而是<strong>系统性的沟通方法论</strong>。它结合了：</p><ul><li><strong>技术理解</strong>：了解 AI 的工作原理</li><li><strong>沟通艺术</strong>：清晰表达需求的能力</li><li><strong>批判思维</strong>：分析和优化结果的眼界</li><li><strong>创意表达</strong>：激发 AI 创造力的方法</li></ul><p>掌握 Prompt Engineering 意味着：</p><ul><li>更高效的开发工作流</li><li>更优质的技术产出</li><li>在 AI 时代保持竞争力</li></ul><p><strong>记住：最好的提示工程师不是那些知道所有命令的人，而是那些最理解如何与智能系统有效协作的人。</strong></p><hr><p><em>进一步学习建议：尝试在下一个项目中应用这些原则，记录不同提示的效果差异，建立自己的提示库和经验总结。</em></p>`,79)])])}const r=i(l,[["render",h]]),d=JSON.parse('{"path":"/article/fc6faley/","title":"Prompt Engineering：与 AI 对话的艺术与科学","lang":"zh-CN","frontmatter":{"title":"Prompt Engineering：与 AI 对话的艺术与科学","createTime":"2025/09/17 00:41:01","permalink":"/article/fc6faley/","description":"在人工智能快速发展的今天，我们与 AI 的交互方式正在发生根本性变化。其中，Prompt Engineering（提示工程）作为一门新兴的技能，正成为解锁 AI 潜力的关键所在。 什么是 Prompt Engineering？ Prompt Engineering 指的是设计、优化和完善输入给 AI 模型的提示（prompt），以获得更准确、相关和有用...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Prompt Engineering：与 AI 对话的艺术与科学\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-19T13:30:27.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/article/fc6faley/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"Prompt Engineering：与 AI 对话的艺术与科学"}],["meta",{"property":"og:description","content":"在人工智能快速发展的今天，我们与 AI 的交互方式正在发生根本性变化。其中，Prompt Engineering（提示工程）作为一门新兴的技能，正成为解锁 AI 潜力的关键所在。 什么是 Prompt Engineering？ Prompt Engineering 指的是设计、优化和完善输入给 AI 模型的提示（prompt），以获得更准确、相关和有用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-19T13:30:27.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-19T13:30:27.000Z"}]]},"readingTime":{"minutes":5.98,"words":1793},"git":{"createdTime":1760676841000,"updatedTime":1760880627000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"volodymyr@foxmail.com","commits":2,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"blog/4.AI/prompt engineering.md","headers":[],"categoryList":[{"id":"0207b0","sort":4,"name":"AI"}]}');export{r as comp,d as data};
