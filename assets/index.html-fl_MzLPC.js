import{_ as t,c as i,e as a,o as n}from"./app-D7KDYWdB.js";const o={};function l(c,e){return n(),i("div",null,[...e[0]||(e[0]=[a('<div class="hint-container tip"><p class="hint-container-title">提问</p><ol><li>TCP协议</li><li>三次握手</li></ol></div><h2 id="tcp协议" tabindex="-1"><a class="header-anchor" href="#tcp协议"><span>TCP协议</span></a></h2><p>TCP协议是面向链接的，提供可靠数据传输服务的传输层协议</p><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h3><ul><li>在通信前，通信双方需要通过三次握手建立链接，并在端系统中维护双方链接的状态信息</li><li>通过序号、确认好、定时重传、检验和等机制，提供可靠的数据传输服务</li><li>点对点服务。提供的是 单个发送方和单个接收方之间的连接</li><li>全双工服务。连接成功的双方都能够向对方发送和接收数据</li><li>拥塞控制机制。在网络用色是会控制发送数据的速率，减少数据包丢失概率和减轻网络拥塞程度</li><li>流量控制机制。保证通信双方的发送和接收速率相同。</li></ul><h3 id="三次握手过程" tabindex="-1"><a class="header-anchor" href="#三次握手过程"><span>三次握手过程</span></a></h3><ol><li>第一次握手，客户端向服务端发送一个<code>SYN</code>链接请求报文段。</li><li>第二次握手，服务端接收到客户端发送的<code>SYN</code>链接请求报文段后，会为该连接分配缓存和变量， 然后向客户端发送 <code>SYN ACK</code> 报文段。</li><li>第三次握手，客户端接收到服务端的肯定应答后，会为这次TCP连接分配缓存和变量， 同时向服务器发送一个对服务端的报文段的确认。</li></ol><div class="hint-container info"><p class="hint-container-title">说明</p><p>简单来说，</p><ul><li>第一次握手就是 客户端对服务端说：你好，我是 A。</li><li>第二次握手就是 服务端对客户端说：你好，我是 B。</li><li>第三次握手就是 客户端对服务端说：那现在我们认识了。</li></ul></div><h3 id="四次挥手过程" tabindex="-1"><a class="header-anchor" href="#四次挥手过程"><span>四次挥手过程</span></a></h3><ol><li>第一次挥手，客户端认为没有数据要再发送给服务端，向服务端发送一个 <code>FIN</code> 报文段，申请断开客户端到服务端的连接状态。</li><li>第二次挥手，服务端收到客户端断开连接的请求后，向客户端发送一个确认报文段， 表示已经接收到了客户端释放连接的请求，以后不再接收来自客户端的数据。</li><li>第三次挥手，服务器发送完所有数据后，向客户端发送 <code>FIN</code> 报文段，申请断开服务器到客户端的连接状态。</li><li>第四次挥手，客户端收到服务器的 <code>FIN</code> 后，像服务器发送一个确认应答，等待一段时间后，确认服务器没有重发请求。 服务器收到客户端的确认应答。 双方没有重发请求，那么TCP连接就完成了释放。</li></ol><div class="hint-container info"><p class="hint-container-title">说明</p><p>简单来说，</p><ul><li>第一次挥手： 客户端对服务端说：没啥事，我准备撤了</li><li>第二次挥手： 服务端对客户端说：好的，知道了</li><li>第三次挥手： 服务端对客户端说：那我也准备撤了</li><li>第四次挥手： 客户端对服务端说：那一起撤吧</li></ul></div>',11)])])}const p=t(o,[["render",l]]),s=JSON.parse('{"path":"/interview-question/a6txp0c3/","title":"TCP协议","lang":"zh-CN","frontmatter":{"title":"TCP协议","createTime":"2022/04/18 06:53:13","permalink":"/interview-question/a6txp0c3/","description":"提问 TCP协议 三次握手 TCP协议 TCP协议是面向链接的，提供可靠数据传输服务的传输层协议 特性 在通信前，通信双方需要通过三次握手建立链接，并在端系统中维护双方链接的状态信息 通过序号、确认好、定时重传、检验和等机制，提供可靠的数据传输服务 点对点服务。提供的是 单个发送方和单个接收方之间的连接 全双工服务。连接成功的双方都能够向对方发送和接收...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TCP协议\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/interview-question/a6txp0c3/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"TCP协议"}],["meta",{"property":"og:description","content":"提问 TCP协议 三次握手 TCP协议 TCP协议是面向链接的，提供可靠数据传输服务的传输层协议 特性 在通信前，通信双方需要通过三次握手建立链接，并在端系统中维护双方链接的状态信息 通过序号、确认好、定时重传、检验和等机制，提供可靠的数据传输服务 点对点服务。提供的是 单个发送方和单个接收方之间的连接 全双工服务。连接成功的双方都能够向对方发送和接收..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":2.57,"words":770},"git":{"createdTime":1650370801000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"volodymyr@foxmail.com","commits":13,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"面试题/计算机网络/TCP协议.md","headers":[]}');export{p as comp,s as data};
