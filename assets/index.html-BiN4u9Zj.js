import{_ as e,c as o,e as i,o as r}from"./app-D7KDYWdB.js";const c={};function n(p,t){return r(),o("div",null,[...t[0]||(t[0]=[i('<div class="hint-container tip"><p class="hint-container-title">提问</p><p>String有哪些原始方法？</p></div><h2 id="静态方法" tabindex="-1"><a class="header-anchor" href="#静态方法"><span>静态方法</span></a></h2><ul><li><code>String.fromCharCode()</code> 返回一个由指定的 UTF-16 代码单元序列创建的字符串</li></ul><h2 id="实例方法" tabindex="-1"><a class="header-anchor" href="#实例方法"><span>实例方法</span></a></h2><ul><li><code>String.prototype.charAt()</code> 从一个字符串中返回指定的字符</li><li><code>String.prototype.charCodeAt()</code> 返回 0 到 65535 之间的整数，表示给定索引处的UTF-16代码单元</li><li><code>String.prototype.concat()</code> 将一个或多个字符串与原字符串连接合并成一个新的字符串并返回 （不建议使用，使用赋值操作符 <code>+</code>， <code>+=</code> 代替）</li><li><code>String.prototype.endsWith()</code> 判断当前字符串是否是以给定的字符串结尾的，并返回布尔值</li><li><code>String.prototype.includes()</code> 判断一个字符串中是否包含另一个字符串，并返回布尔值</li><li><code>String.prototype.indexOf()</code> 返回当前字符串中第一次出现指定值的索引，不存在则返回 -1</li><li><code>String.prototype.lastIndexOf()</code> 返回当前字符串中最后一次出现指定值的索引，不存在则返回 -1</li><li><code>String.prototype.match()</code> 检索返回一个字符串匹配正则表达式的结果</li><li><code>String.prototype.matchAll()</code> 返回一个包含所有匹配正则表达式的结果及分组捕获组的迭代器</li><li><code>String.prototype.padEnd()</code> 用一个字符串填充当前字符串，返回填充后达到指定长度的字符串，从末尾开始填充</li><li><code>String.prototype.padStart()</code> 用一个字符串填充当前字符串，返回填充后达到指定长度的字符串，从左侧开始填充</li><li><code>String.prototype.repeat()</code> 构造并返回一个新字符串，该字符串包含被链接在一起的制定数量的字符串。</li><li><code>String.prototype.replace()</code> 返回一个由替换字符串替换部分或所有的模式匹配项后的新字符串。</li><li><code>String.prototype.replaceAll()</code> 返回一个新字符串，新字符串所有满足模式匹配和被替换部分字符串都被替换</li><li><code>String.prototype.search()</code> 执行正则表达式和 字符串之间一个搜索匹配。</li><li><code>String.prototype.slice()</code> 提取某个字符串的一部分，并返回一个新的字符串</li><li><code>String.prototype.split()</code> 使用指定的分隔符字符串将一个字符串分割成子字符串数组，并返回。</li><li><code>String.prototype.startsWith()</code> 判断当前字符串是否以给定的字符串开头，并返回布尔值</li><li><code>String.prototype.substring()</code> 返回当前字符串从开始索引到结束索引之间的子集。</li><li><code>String.prototype.toLocaleLowerCase()</code> 根据任何指定区域语言环境设置的大小写映射，返回当前字符串被转换为小写格式的新字符串</li><li><code>String.prototype.toLocaleUpperCase()</code> 根据任何指定区域语言环境设置的大小写映射，返回当前字符串被转换为答谢格式的新字符串</li><li><code>String.prototype.toLowerCase()</code> 将当前字符串转为小写形式并返回</li><li><code>String.prototype.toUpperCase()</code> 将当前字符串转为大写形式并返回</li><li><code>String.prototype.trim()</code> 删除当前字符串两端的空白字符，并返回新的字符串</li><li><code>String.prototype.trimEnd()</code> 删除当前字符串末端的空白字符</li><li><code>String.prototype.trimStart()</code> 删除当前字符串开头的空白字符</li></ul>',5)])])}const d=e(c,[["render",n]]),l=JSON.parse('{"path":"/interview-question/wnuvm4t1/","title":"字符串","lang":"zh-CN","frontmatter":{"title":"字符串","createTime":"2022/04/16 05:14:20","permalink":"/interview-question/wnuvm4t1/","description":"提问 String有哪些原始方法？ 静态方法 String.fromCharCode() 返回一个由指定的 UTF-16 代码单元序列创建的字符串 实例方法 String.prototype.charAt() 从一个字符串中返回指定的字符 String.prototype.charCodeAt() 返回 0 到 65535 之间的整数，表示给定索引处的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"字符串\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/interview-question/wnuvm4t1/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"字符串"}],["meta",{"property":"og:description","content":"提问 String有哪些原始方法？ 静态方法 String.fromCharCode() 返回一个由指定的 UTF-16 代码单元序列创建的字符串 实例方法 String.prototype.charAt() 从一个字符串中返回指定的字符 String.prototype.charCodeAt() 返回 0 到 65535 之间的整数，表示给定索引处的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":2.5,"words":750},"git":{"createdTime":1650212829000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"volodymyr@foxmail.com","commits":12,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"autoDesc":true,"filePathRelative":"面试题/JavaScript/字符串.md","headers":[]}');export{d as comp,l as data};
