import{_ as g,c,b as a,d as r,e as p,a as s,w as e,r as h,o as y}from"./app-D7KDYWdB.js";const m={},f={class:"code-block-title","data-title":"example.js"},u={class:"code-block-title-bar"},v={class:"title"};function A(b,i){const o=h("Badge"),d=h("RepoCard"),l=h("VPIcon"),k=h("CodeTabs");return y(),c("div",null,[a(o,{text:"NodeJS"}),i[8]||(i[8]=r()),a(o,{text:"Deno"}),i[9]||(i[9]=r()),a(o,{text:"Browser"}),a(d,{repo:"yargs/yargs-parser"}),i[10]||(i[10]=p('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p><mark>yargs-parser</mark> 是一个轻量级、高性能的 Node.js 命令行参数解析库，专注于将原始命令行输入（如 <code>process.argv</code>）转换为结构化的 JavaScript 对象。作为流行框架 <code>yargs</code> 的核心解析引擎，它提供了高度可定制的解析能力，适合直接集成或作为底层工具使用。</p><h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h2><ul><li><p><strong>参数结构化解析</strong></p><p>将命令行输入（如 <code>--name=foo -abc 100</code>）解析为键值对对象，支持：</p><ul><li><strong>布尔标志</strong>：<code>-a</code> 解析为 <code>{ a: true }</code></li><li><strong>键值参数</strong>：<code>--file config.txt</code> 解析为 <code>{ file: &quot;config.txt&quot; }</code></li><li><strong>数组与嵌套对象</strong>：<code>--file a.txt --file b.txt</code> 生成数组 <code>{ file: [&quot;a.txt&quot;, &quot;b.txt&quot;] }</code>； <code>--db.host localhost</code> 生成嵌套对象 { <code>db: { host: &quot;localhost&quot; }</code> }</li><li><strong>位置参数</strong>：未标记的参数保存在 <code>_</code> 属性中（如 <code>node app.js run</code> → <code>{ _: [&quot;run&quot;] }</code>）</li></ul></li><li><p><strong>解析配置</strong></p><ul><li><strong>类型自动转换</strong>：启用 <code>parse-numbers</code> 后，<code>--port 8080</code> 自动转为数字（而非字符串）</li><li><strong>别名系统</strong>：<code>alias: { n: &quot;name&quot; }</code> 使 <code>-n foo</code> 等效于 <code>--name foo</code></li><li><strong>默认值</strong>：<code>default: { env: &quot;dev&quot; }</code> 确保未提供参数时使用默认值</li><li><strong>驼峰转换</strong>：<code>camel-case-expansion</code> 配置将 <code>--my-option</code> 转为 <code>myOption</code></li></ul></li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2>',5)),a(k,{id:"0",data:[{id:"npm"},{id:"pnpm"},{id:"yarn"}],"tab-id":"npm-to-npm-pnpm-yarn"},{title0:e(({value:t,isActive:n})=>[a(l,{provider:"iconify",name:"logos:npm-icon"}),i[0]||(i[0]=s("span",null,"npm",-1))]),title1:e(({value:t,isActive:n})=>[a(l,{provider:"iconify",name:"vscode-icons:file-type-light-pnpm"}),i[1]||(i[1]=s("span",null,"pnpm",-1))]),title2:e(({value:t,isActive:n})=>[a(l,{provider:"iconify",name:"vscode-icons:file-type-yarn"}),i[2]||(i[2]=s("span",null,"yarn",-1))]),tab0:e(({value:t,isActive:n})=>[...i[3]||(i[3]=[s("div",{class:"language-sh","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[s("code",{class:"language-sh"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"npm"),s("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," install"),s("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," yargs-parser")])])])],-1)])]),tab1:e(({value:t,isActive:n})=>[...i[4]||(i[4]=[s("div",{class:"language-sh","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[s("code",{class:"language-sh"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"pnpm"),s("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," add"),s("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," yargs-parser")])])])],-1)])]),tab2:e(({value:t,isActive:n})=>[...i[5]||(i[5]=[s("div",{class:"language-sh","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[s("code",{class:"language-sh"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"yarn"),s("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," add"),s("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," yargs-parser")])])])],-1)])]),_:1}),i[11]||(i[11]=s("h2",{id:"使用",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用"},[s("span",null,"使用")])],-1)),s("div",f,[s("div",u,[s("span",v,[a(l,{provider:"iconify",name:"vscode-icons:file-type-js"}),i[6]||(i[6]=r("example.js",-1))])]),i[7]||(i[7]=p(`<div class="language-ts" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> parse</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">yargs-parser</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">argv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> parse</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">process</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">argv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">slice</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">))</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">argv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre></div>`,1))]),i[12]||(i[12]=p(`<div class="language-sh" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">node</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> example.js</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --foo=33</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --bar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> hello</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> _:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [], foo: 33, bar: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">hello</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span></span></code></pre></div><h2 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景"><span>适用场景</span></a></h2><ul><li>CLI 工具开发</li></ul>`,3))])}const x=g(m,[["render",A]]),D=JSON.parse('{"path":"/fe-oss/yargs-parser/","title":"yargs-parser","lang":"zh-CN","frontmatter":{"title":"yargs-parser","createTime":"2024/07/29 20:17:24","permalink":"/fe-oss/yargs-parser/","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"yargs-parser\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-07T17:39:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://pengzhanbo.cn/fe-oss/yargs-parser/"}],["meta",{"property":"og:site_name","content":"鹏展博"}],["meta",{"property":"og:title","content":"yargs-parser"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-07T17:39:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-07T17:39:39.000Z"}]]},"readingTime":{"minutes":1.15,"words":345},"git":{"createdTime":1750608045000,"updatedTime":1759858779000,"contributors":[{"name":"pengzhanbo","username":"pengzhanbo","email":"volodymyr@foxmail.com","commits":2,"avatar":"https://avatars.githubusercontent.com/pengzhanbo?v=4","url":"https://github.com/pengzhanbo"}]},"filePathRelative":"开源库指南/命令行解析/yargs-parser.md","headers":[]}');export{x as comp,D as data};
